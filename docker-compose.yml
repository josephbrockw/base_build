services:
  broker:
    image: redis:alpine
    container_name: broker

  db:
    image: postgres:15
    container_name: db
    volumes:
      - postges_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=db_dev
    ports:
      - 5432:5432

  backend:
    build: backend
    container_name: backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/:/usr/src/backend/
    ports:
      - 8009:8000
    env_file:
      - backend/.env.dev
      - backend/.env.secrets
    depends_on:
      - db
      - broker

  celery:
    build: backend
    container_name: django_worker
    command: celery -A worker worker --hostname=djangoworker --loglevel=info -Q default -E -B
    volumes:
      - ./backend/:/usr/src/backend/
    env_file:
      - backend/.env.dev
      - backend/.env.secrets
    depends_on:
      - db
      - broker
      - backend

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: frontend
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    env_file:
      - client/.env.dev
    stdin_open: true
    depends_on:
      - backend

  celery2:
    build: celeryworker
    container_name: independent_worker
    command: celery -A worker_app worker --hostname=independentworker --loglevel=info -Q queue2
    working_dir: /usr/src/celeryworker
    volumes:
      - ./celeryworker/:/usr/src/celeryworker/
    depends_on:
      - broker

  flower:
    image: mher/flower
    container_name: flower
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=redis://broker:6379/0
    depends_on:
      - broker

  docs:
    build:
      context: ./docs
      dockerfile: Dockerfile.dev
    container_name: docs
    volumes:
      - ./docs:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    stdin_open: true
    tty: true

volumes:
  postges_data:
