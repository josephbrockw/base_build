openapi: 3.0.3
info:
  title: BaseBuild API
  description: API documentation for the BaseBuild application foundation
  version: 1.0.0

servers:
  - url: http://localhost:8009
    description: Local development server

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    RegisterRequest:
      type: object
      required:
        - email
        - password
        - password_confirm
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        password_confirm:
          type: string
          format: password

    TokenResponse:
      type: object
      properties:
        access:
          type: string
        refresh:
          type: string

    StandardResponse:
      type: object
      properties:
        data:
          type: object
        message:
          type: string
        error:
          type: string
        status:
          type: integer

paths:
  /api/auth/sign-up/:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Create a new user account and send verification email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/auth/verify/:
    post:
      tags:
        - Authentication
      summary: Verify email address
      description: Verify user's email address using OTP token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Email verified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/auth/resend-verify/:
    post:
      tags:
        - Authentication
      summary: Resend verification email
      description: Resend the email verification token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Verification email sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/auth/login/:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user and receive JWT tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  /api/auth/logout/:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Invalidate the refresh token
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/auth/token/refresh/:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      description: Get a new access token using refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refresh
              properties:
                refresh:
                  type: string
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  /api/users/me/:
    get:
      tags:
        - User
      summary: Get current user
      description: Retrieve details of the currently authenticated user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    patch:
      tags:
        - User
      summary: Update current user
      description: Update information of the currently authenticated user
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: User information updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/experiments/{id}/track-view/:
    post:
      tags:
        - Experiments
      summary: Track experiment view
      description: Track that a variation has been shown to the user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Experiment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - variation
              properties:
                variation:
                  type: string
      responses:
        '200':
          description: View tracked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /api/experiments/{id}/track-conversion/:
    post:
      tags:
        - Experiments
      summary: Track experiment conversion
      description: Track that a user has performed the desired outcome for a variation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Experiment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - variation
              properties:
                variation:
                  type: string
      responses:
        '200':
          description: Conversion tracked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
